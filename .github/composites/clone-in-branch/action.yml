name: "Checkout to branch if exists"
description: "Clones the specified repository in the provided branches if exist"

inputs:
  repo_url:
    description: "Url to the repository to clone"
    required: true
  prioritized_branches:
    description: "Comma separated list of branches to try to checkout in priority order"
    required: true
  path:
    description: "Path to download the repository into"
    required: false
    default: ${{ github.workspace }}
  target_name:
    description: "Target name for the repository to clone"
    required: false
  verbose:
    description: "If set to true, show trace of the execution steps"
    type: boolean
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Get repo url
      shell: bash
      id: get-repo-url
      run: |
        echo "repo_url=${{ inputs.repo_url }}" >> $GITHUB_OUTPUT
        if [[ ${{ inputs.verbose }} == true ]] ; then
          echo "Received git url: ${{ inputs.repo_url }}"
        fi
    
    - name: Get repo name
      shell: bash
      id: get-repo-name
      run: |
        if [[ -n "${{ inputs.target_name }}" ]]; then
          export REPO_NAME=${{ inputs.target_name }}
        else
          export REPO_NAME=$(basename -s .git ${{ steps.get-repo-url.outputs.repo_url }})
        fi
        echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT
        if [[ ${{ inputs.verbose }} == true ]] ; then
          echo "Target repository name: $REPO_NAME"
        fi

    - name: Clone repository
      id: clone-repository
      shell: bash
      working-directory: ${{ inputs.path }}
      run: |
        if [[ "${{ inputs.path }}" == */ ]]; then
          FULL_PATH="${{ inputs.path }}${{ steps.get-repo-name.outputs.repo_name }}"
        else
          FULL_PATH="${{ inputs.path }}/${{ steps.get-repo-name.outputs.repo_name }}"
        fi
        echo "full_path=$FULL_PATH" >> "$GITHUB_OUTPUT"
        if [[ ${{ inputs.verbose }} == true ]] ; then
          echo "Cloning with path: $FULL_PATH"
        fi
        git clone ${{ steps.get-repo-url.outputs.repo_url }}.git ${{ steps.get-repo-name.outputs.repo_name }}
    
    - name: Get target branch list
      shell: bash
      working-directory: ${{ steps.clone-repository.outputs.full_path }}
      run: |
        echo "Estoy en: $(pwd)"
        echo "Veo: $(ls)"
        IFS=',' read -r -a branches <<< "${{ inputs.prioritized_branches }}"
        for branch in "${branches[@]}"; do
          if [[ $(git ls-remote --heads ${{ steps.get-repo-url.outputs.repo_url }}.git $branch | wc -l) -eq 1 ]]; then
            if [[ ${{ inputs.verbose }} == true ]] ; then
              echo "Checking out to branch $branch"
            fi
            git checkout $branch
            break
          else
            if [[ ${{ inputs.verbose }} == true ]] ; then
              echo "Branch '$branch' does not exist. Skipping"
            fi
          fi
        done
